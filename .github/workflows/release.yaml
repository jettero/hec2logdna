
name: release

on:
  push:
    # branches:
    #   - develop
    tags:
      - v*.*.*-?*
  workflow_dispatch:
    inputs: {}

jobs:
  binaries:
    uses: ./.github/workflows/binaries.yaml
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: binaries
    steps:
      - uses: actions/checkout@v2
        # can't use git describe without tags... fetch-depth: 0 tells checkout to get tags (and things)
        with:
          fetch-depth: 0
      - name: ejaculate list of tags into tags.txt artifact
        run: git tag -l | xargs -rn1 -IXXX git log -1 "--pretty=format:XXX :- %h %ae %s %ar" XXX > tags.txt
      - name: compute version and store in ver.txt artifact
        run: ./setup.py --version | tee ver.txt
      - uses: actions/upload-artifact@v2
        with:
          name: ver.txt
          path: ver.txt
      - uses: actions/upload-artifact@v2
        with:
          name: tags.txt
          path: tags.txt
      - uses: actions/download-artifact@v3
        with:
          name: ldogger-linux-x86_64
          path: .
      - uses: actions/download-artifact@v3
        with:
          name: sj2l-linux-x86_64
          path: .
      - name: create release
        run: |
          ver="$(< ver.txt)"
          date=$(date +%Y-%m-%d)

          ghrc_args=( --generate-notes )

          if [[ "$ver" =~ -rc ]]
          then prerelease+=( -p )
          fi

          if [[ "$ver" =~ ^v?[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]* ]]
          then tag=v$ver; ghrc_args+=( -t "$ver" $tag )
          else tag=bleed-$date; ghrc_args+=( -t "$date Bleeding Edge $ver" $tag )
          fi

          gh release delete -y "$tag" &>/dev/null || :

          PS4="== actual ==> "
          set -x
          gh release create "${ghrc_args[@]}" sj2l-linux-x86_64 ldogger-linux-x86_64

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
